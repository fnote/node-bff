service: cloud-pci-bff

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules: true   # Node modules configuration for packaging
    packager: 'npm'   # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore
  custom:
    serverless-offline:
      httpPort: 4000
  environments:
    local: LOCAL
    dev: DEV
    exe: EXE
    prod: PROD
  deploymentBucket:
    local: local
    dev: ${ssm:/CP/CLOUD-PCI/DEV/DEPLOYMENTBUCKET}
    exe: ${ssm:/CP/CLOUD-PCI/EXE/DEPLOYMENTBUCKET}
    prod: ${ssm:/CP/CLOUD-PCI/PROD/DEPLOYMENTBUCKET}

provider:
  name: aws
  runtime: nodejs12.x
  project: cloud-pci-bff
  stage: ${opt:stage, 'dev'}
  environmentShort: ${file(./env.yml):${self:provider.stage}.STAGE}
  region: ${file(./env.yml):${self:provider.stage}.REGION}
  environment: ${file(./env.yml):${self:provider.stage}}
  deploymentBucket: ${self:custom.deploymentBucket.${self:provider.stage}}
  deploymentPrefix: cloud-pci-bff
  stackTags: ${file(AwsTags.yml):${self:provider.stage}}
  vpc:
    securityGroupIds:
      - ${ssm:/CP/CLOUD-PCI/SECUTIRYGROUP1}
      - ${ssm:/CP/CLOUD-PCI/SECUTIRYGROUP2}
      - ${ssm:/CP/CLOUD-PCI/SECUTIRYGROUP3}
    subnetIds:
      - ${ssm:/CP/CLOUD-PCI/SUBNET1}
      - ${ssm:/CP/CLOUD-PCI/SUBNET2}
      - ${ssm:/CP/CLOUD-PCI/SUBNET3}
  role: ${ssm:/CP/CLOUD-PCI/EXECUTIONROLE}
  alb:
    targetGroupPrefix: cloud-pci-${self:provider.environmentShort}-
    authorizers:
      cognitoLoginAuth:
        type: 'cognito'
        onUnauthenticatedRequest: 'authenticate' # Redirect unauthenticated clients to Cognito login page
        scope: 'openid'
        sessionCookieName: 'PCI-ELBAuthSessionCookie'
        sessionTimeout: 432000
        userPoolArn: ${file(./env.yml):${self:provider.stage}.COGNITO_USER_POOL_ARN}
        userPoolClientId: ${file(./env.yml):${self:provider.stage}.COGNITO_APP_CLIENT_ID}
        userPoolDomain: ${file(./env.yml):${self:provider.stage}.COGNITO_DOMAIN}
      cognitoAuth:
        type: 'cognito'
        onUnauthenticatedRequest: 'allow'
        scope: 'openid'
        sessionCookieName: 'PCI-ELBAuthSessionCookie'
        sessionTimeout: 432000
        userPoolArn: ${file(./env.yml):${self:provider.stage}.COGNITO_USER_POOL_ARN}
        userPoolClientId: ${file(./env.yml):${self:provider.stage}.COGNITO_APP_CLIENT_ID}
        userPoolDomain: ${file(./env.yml):${self:provider.stage}.COGNITO_DOMAIN}


resources:
  - ${file(./serverless.resources.yml)}

functions:
  cloud-pci-bff:
    name: cloud-pci-bff-${self:provider.environmentShort}
    handler: src/app.serverlessApp
    environment:
      ENVIRONMENT: ${self:provider.environmentShort}
      PORT: ${opt:port, 4000}
    memorySize: 1024
    timeout: 60
    # to locally up the application, uncomment -> events: ${file(./serverless-routes.js)} this line and comment
    # out the other events section which is used in alb
#    events: ${file(./serverless-routes.js)}
    events:
      - alb:
          listenerArn: !Ref LoadBalancerListenerHTTP
          priority: 1
          conditions:
            path: /v1/*
      - alb:
          listenerArn: !Ref LoadBalancerListenerHTTPS
          priority: 2
          conditions:
            path: /v1/pci-bff/auth/login
          authorizer: 'cognitoLoginAuth'
      - alb:
          listenerArn: !Ref LoadBalancerListenerHTTPS
          priority: 3
          conditions:
            path: /v1/*
          authorizer: 'cognitoAuth'
